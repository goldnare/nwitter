[{"C:\\Users\\vip\\Documents\\nwitter\\src\\index.js":"1","C:\\Users\\vip\\Documents\\nwitter\\src\\components\\App.js":"2","C:\\Users\\vip\\Documents\\nwitter\\src\\components\\Router.js":"3","C:\\Users\\vip\\Documents\\nwitter\\src\\routes\\Auth.js":"4","C:\\Users\\vip\\Documents\\nwitter\\src\\routes\\Home.js":"5","C:\\Users\\vip\\Documents\\nwitter\\src\\fbase.js":"6"},{"size":208,"mtime":1610854760604,"results":"7","hashOfConfig":"8"},{"size":376,"mtime":1610854765743,"results":"9","hashOfConfig":"8"},{"size":706,"mtime":1610854765016,"results":"10","hashOfConfig":"8"},{"size":1070,"mtime":1610855750376,"results":"11","hashOfConfig":"8"},{"size":89,"mtime":1610854761957,"results":"12","hashOfConfig":"8"},{"size":498,"mtime":1610854758527,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1jr9ti0",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\vip\\Documents\\nwitter\\src\\index.js",[],["29","30"],"C:\\Users\\vip\\Documents\\nwitter\\src\\components\\App.js",["31"],"import React, { useState } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(authService.currentUser);\n  return (\n    <> \n      <AppRouter isLoggedIn={isLoggedIn} />\n      <footer>&copy; {new Date().getFullYear()} Nwitter</footer>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\vip\\Documents\\nwitter\\src\\components\\Router.js",["32"],"import React, { useState } from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\n\r\n const AppRouter = ({isLoggedIn}) => {\r\n    return(\r\n        <Router>\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <>\r\n                    <Route exact path=\"/\">\r\n                        <Home />\r\n                    </Route> \r\n                    </> \r\n                ) : (\r\n                    <Route exact path=\"/\"> \r\n                        <Auth /> \r\n                    </Route>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","C:\\Users\\vip\\Documents\\nwitter\\src\\routes\\Auth.js",[],"C:\\Users\\vip\\Documents\\nwitter\\src\\routes\\Home.js",[],"C:\\Users\\vip\\Documents\\nwitter\\src\\fbase.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":6,"column":22,"nodeType":"39","messageId":"40","endLine":6,"endColumn":35},{"ruleId":"37","severity":1,"message":"41","line":1,"column":17,"nodeType":"39","messageId":"40","endLine":1,"endColumn":25},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'setIsLoggedIn' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]